Don't define assorted things for userspace.  In particular do not define
inline to __attribute__((always_inline)).

Update 2005-05-05 gotom, add unexport __builtin_warning for STRICT_ANSI.

--- include.orig/linux/compiler.h	2005-04-21 09:03:16.000000000 +0900
+++ include/linux/compiler.h	2005-05-05 19:09:15.103977954 +0900
@@ -26,7 +26,9 @@ extern void __chk_io_ptr(void __iomem *)
 # define __iomem
 # define __chk_user_ptr(x) (void)0
 # define __chk_io_ptr(x) (void)0
-# define __builtin_warning(x, y...) (1)
+# if !defined(__STRICT_ANSI__)
+#  define __builtin_warning(x, y...) (1)
+# endif
 # define __acquires(x)
 # define __releases(x)
 # define __acquire(x) (void)0
@@ -34,6 +36,15 @@ extern void __chk_io_ptr(void __iomem *)
 # define __cond_lock(x) (x)
 #endif
 
+#if !defined(__KERNEL__)
+/* Debian: Most of these are inappropriate for userspace.  */
+/* We don't define likely, unlikely, or barrier; they're namespace-intrusive
+   and should not be needed outside of __KERNEL__.  For __attribute_pure__
+   and __attribute_used__ we use glibc's definitions.  */
+# include <sys/cdefs.h>
+# define __deprecated
+#else
+
 #ifdef __KERNEL__
 
 #if __GNUC__ > 4
@@ -149,4 +160,6 @@ extern void __chk_io_ptr(void __iomem *)
 #define __always_inline inline
 #endif
 
+#endif /* __KERNEL__ */
+
 #endif /* __LINUX_COMPILER_H */
